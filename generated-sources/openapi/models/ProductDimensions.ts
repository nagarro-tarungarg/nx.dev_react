/* tslint:disable */
/* eslint-disable */
/**
 * Product App Microservice
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Dimension } from './Dimension';
import {
    DimensionFromJSON,
    DimensionFromJSONTyped,
    DimensionToJSON,
} from './Dimension';

/**
 * 
 * @export
 * @interface ProductDimensions
 */
export interface ProductDimensions {
    /**
     * 
     * @type {Dimension}
     * @memberof ProductDimensions
     */
    count?: Dimension;
    /**
     * 
     * @type {Dimension}
     * @memberof ProductDimensions
     */
    height?: Dimension;
    /**
     * 
     * @type {Dimension}
     * @memberof ProductDimensions
     */
    width?: Dimension;
    /**
     * 
     * @type {Dimension}
     * @memberof ProductDimensions
     */
    length?: Dimension;
    /**
     * 
     * @type {Dimension}
     * @memberof ProductDimensions
     */
    volume?: Dimension;
    /**
     * 
     * @type {Dimension}
     * @memberof ProductDimensions
     */
    weight?: Dimension;
}

/**
 * Check if a given object implements the ProductDimensions interface.
 */
export function instanceOfProductDimensions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductDimensionsFromJSON(json: any): ProductDimensions {
    return ProductDimensionsFromJSONTyped(json, false);
}

export function ProductDimensionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductDimensions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'count': !exists(json, 'count') ? undefined : DimensionFromJSON(json['count']),
        'height': !exists(json, 'height') ? undefined : DimensionFromJSON(json['height']),
        'width': !exists(json, 'width') ? undefined : DimensionFromJSON(json['width']),
        'length': !exists(json, 'length') ? undefined : DimensionFromJSON(json['length']),
        'volume': !exists(json, 'volume') ? undefined : DimensionFromJSON(json['volume']),
        'weight': !exists(json, 'weight') ? undefined : DimensionFromJSON(json['weight']),
    };
}

export function ProductDimensionsToJSON(value?: ProductDimensions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'count': DimensionToJSON(value.count),
        'height': DimensionToJSON(value.height),
        'width': DimensionToJSON(value.width),
        'length': DimensionToJSON(value.length),
        'volume': DimensionToJSON(value.volume),
        'weight': DimensionToJSON(value.weight),
    };
}

