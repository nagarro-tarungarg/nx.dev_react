/* tslint:disable */
/* eslint-disable */
/**
 * Product App Microservice
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ErrorResponse } from './ErrorResponse';
import {
    ErrorResponseFromJSON,
    ErrorResponseFromJSONTyped,
    ErrorResponseToJSON,
} from './ErrorResponse';
import type { ErrorResponseError } from './ErrorResponseError';
import {
    ErrorResponseErrorFromJSON,
    ErrorResponseErrorFromJSONTyped,
    ErrorResponseErrorToJSON,
} from './ErrorResponseError';
import type { ValidationErrorResponseAllOf } from './ValidationErrorResponseAllOf';
import {
    ValidationErrorResponseAllOfFromJSON,
    ValidationErrorResponseAllOfFromJSONTyped,
    ValidationErrorResponseAllOfToJSON,
} from './ValidationErrorResponseAllOf';

/**
 * 
 * @export
 * @interface ValidationErrorResponse
 */
export interface ValidationErrorResponse {
    /**
     * 
     * @type {ErrorResponseError}
     * @memberof ValidationErrorResponse
     */
    error?: ErrorResponseError;
}

/**
 * Check if a given object implements the ValidationErrorResponse interface.
 */
export function instanceOfValidationErrorResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ValidationErrorResponseFromJSON(json: any): ValidationErrorResponse {
    return ValidationErrorResponseFromJSONTyped(json, false);
}

export function ValidationErrorResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationErrorResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'error': !exists(json, 'error') ? undefined : ErrorResponseErrorFromJSON(json['error']),
    };
}

export function ValidationErrorResponseToJSON(value?: ValidationErrorResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error': ErrorResponseErrorToJSON(value.error),
    };
}

