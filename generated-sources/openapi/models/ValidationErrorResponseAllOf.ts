/* tslint:disable */
/* eslint-disable */
/**
 * Product App Microservice
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ValidationErrorResponseAllOfError } from './ValidationErrorResponseAllOfError';
import {
    ValidationErrorResponseAllOfErrorFromJSON,
    ValidationErrorResponseAllOfErrorFromJSONTyped,
    ValidationErrorResponseAllOfErrorToJSON,
} from './ValidationErrorResponseAllOfError';

/**
 * 
 * @export
 * @interface ValidationErrorResponseAllOf
 */
export interface ValidationErrorResponseAllOf {
    /**
     * 
     * @type {ValidationErrorResponseAllOfError}
     * @memberof ValidationErrorResponseAllOf
     */
    error?: ValidationErrorResponseAllOfError;
}

/**
 * Check if a given object implements the ValidationErrorResponseAllOf interface.
 */
export function instanceOfValidationErrorResponseAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ValidationErrorResponseAllOfFromJSON(json: any): ValidationErrorResponseAllOf {
    return ValidationErrorResponseAllOfFromJSONTyped(json, false);
}

export function ValidationErrorResponseAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationErrorResponseAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'error': !exists(json, 'error') ? undefined : ValidationErrorResponseAllOfErrorFromJSON(json['error']),
    };
}

export function ValidationErrorResponseAllOfToJSON(value?: ValidationErrorResponseAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'error': ValidationErrorResponseAllOfErrorToJSON(value.error),
    };
}

